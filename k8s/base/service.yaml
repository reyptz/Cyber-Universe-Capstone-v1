# Service sécurisé pour Ghost Cyber Universe
apiVersion: v1
kind: Service
metadata:
  name: ghost-cyber-universe-service
  namespace: ghost-cyber-universe
  labels:
    app: ghost-cyber-universe
    security-level: high
  annotations:
    security.ghost-cyber-universe.com/network-policy: "enabled"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: ghost-cyber-universe
  sessionAffinity: None
---
# Service pour les métriques
apiVersion: v1
kind: Service
metadata:
  name: ghost-cyber-universe-metrics
  namespace: ghost-cyber-universe
  labels:
    app: ghost-cyber-universe
    component: metrics
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: ghost-cyber-universe
---
# Ingress sécurisé
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ghost-cyber-universe-ingress
  namespace: ghost-cyber-universe
  labels:
    app: ghost-cyber-universe
    security-level: high
  annotations:
    # Certificats TLS
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Sécurité
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    
    # Headers de sécurité
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
    
    # CORS
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://ghost-cyber-universe.com"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    
    # Limites
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Monitoring
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/access-log-path: "/var/log/nginx/access.log"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "true"
spec:
  tls:
  - hosts:
    - ghost-cyber-universe.com
    - api.ghost-cyber-universe.com
    secretName: ghost-cyber-universe-tls
  rules:
  - host: ghost-cyber-universe.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ghost-cyber-universe-service
            port:
              number: 8080
  - host: api.ghost-cyber-universe.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: ghost-cyber-universe-service
            port:
              number: 8080
---
# ConfigMap pour la configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: ghost-cyber-universe-config
  namespace: ghost-cyber-universe
  labels:
    app: ghost-cyber-universe
data:
  # Configuration de l'application
  app.yaml: |
    server:
      host: "0.0.0.0"
      port: 8080
      workers: 4
      timeout: 30s
    
    security:
      jwt:
        expires_in: "24h"
        algorithm: "HS256"
      rate_limit:
        requests_per_minute: 100
        burst: 10
      cors:
        allowed_origins: ["https://ghost-cyber-universe.com"]
        allowed_methods: ["GET", "POST", "PUT", "DELETE"]
        allowed_headers: ["Authorization", "Content-Type"]
    
    logging:
      level: "info"
      format: "json"
      output: "stdout"
    
    monitoring:
      metrics:
        enabled: true
        port: 9090
        path: "/metrics"
      health:
        enabled: true
        path: "/health"
        interval: "30s"
  
  # Configuration Nginx
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;
        
        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        
        # Sécurité
        server_tokens off;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
        
        # Limites
        client_max_body_size 10m;
        client_body_timeout 60s;
        client_header_timeout 60s;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
        
        server {
            listen 80;
            server_name ghost-cyber-universe.com;
            
            # Redirection HTTPS
            return 301 https://$server_name$request_uri;
        }
        
        server {
            listen 443 ssl http2;
            server_name ghost-cyber-universe.com;
            
            # SSL/TLS
            ssl_certificate /etc/ssl/certs/ghost-cyber-universe.crt;
            ssl_certificate_key /etc/ssl/private/ghost-cyber-universe.key;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
            ssl_prefer_server_ciphers off;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            limit_conn conn_limit_per_ip 10;
            
            location / {
                proxy_pass http://ghost-cyber-universe-service:8080;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # Timeouts
                proxy_connect_timeout 60s;
                proxy_send_timeout 60s;
                proxy_read_timeout 60s;
            }
        }
    }
