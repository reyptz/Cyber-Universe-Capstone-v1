# Constraints OPA/Gatekeeper pour Ghost Cyber Universe
# Application des politiques de sécurité

---
# Contrainte pour les conteneurs non-root
apiVersion: security.ghost-cyber-universe.com/v1beta1
kind: K8sRequiredNonRoot
metadata:
  name: require-non-root
  namespace: ghost-cyber-universe
  labels:
    security.ghost-cyber-universe.com/policy: "required"
    security.ghost-cyber-universe.com/severity: "high"
spec:
  match:
    kinds:
      - apiGroups: ["apps"]
        kinds: ["Deployment", "DaemonSet", "StatefulSet"]
    namespaces: ["ghost-cyber-universe", "ghost-cyber-universe-staging", "ghost-cyber-universe-production"]
  parameters:
    message: "All containers must run as non-root user for security"
    severity: "error"
---
# Contrainte pour les capabilities
apiVersion: security.ghost-cyber-universe.com/v1beta1
kind: K8sRequiredCapabilities
metadata:
  name: require-capabilities-drop
  namespace: ghost-cyber-universe
  labels:
    security.ghost-cyber-universe.com/policy: "required"
    security.ghost-cyber-universe.com/severity: "high"
spec:
  match:
    kinds:
      - apiGroups: ["apps"]
        kinds: ["Deployment", "DaemonSet", "StatefulSet"]
    namespaces: ["ghost-cyber-universe", "ghost-cyber-universe-staging", "ghost-cyber-universe-production"]
  parameters:
    message: "All containers must drop ALL capabilities"
    severity: "error"
---
# Contrainte pour les ressources
apiVersion: security.ghost-cyber-universe.com/v1beta1
kind: K8sRequiredResources
metadata:
  name: require-resources
  namespace: ghost-cyber-universe
  labels:
    security.ghost-cyber-universe.com/policy: "required"
    security.ghost-cyber-universe.com/severity: "medium"
spec:
  match:
    kinds:
      - apiGroups: ["apps"]
        kinds: ["Deployment", "DaemonSet", "StatefulSet"]
    namespaces: ["ghost-cyber-universe", "ghost-cyber-universe-staging", "ghost-cyber-universe-production"]
  parameters:
    message: "All containers must specify resource requests and limits"
    severity: "warning"
---
# Contrainte pour les images sécurisées
apiVersion: security.ghost-cyber-universe.com/v1beta1
kind: K8sRequiredSecureImages
metadata:
  name: require-secure-images
  namespace: ghost-cyber-universe
  labels:
    security.ghost-cyber-universe.com/policy: "required"
    security.ghost-cyber-universe.com/severity: "high"
spec:
  match:
    kinds:
      - apiGroups: ["apps"]
        kinds: ["Deployment", "DaemonSet", "StatefulSet"]
    namespaces: ["ghost-cyber-universe", "ghost-cyber-universe-staging", "ghost-cyber-universe-production"]
  parameters:
    message: "All containers must use images from approved registries and specific tags"
    severity: "error"
    allowedRegistries:
      - "ghcr.io/ghost-cyber-universe"
      - "docker.io/library"
      - "quay.io/ghost-cyber-universe"
---
# Contrainte pour les NetworkPolicies
apiVersion: security.ghost-cyber-universe.com/v1beta1
kind: K8sRequiredNetworkPolicies
metadata:
  name: require-network-policies
  namespace: ghost-cyber-universe
  labels:
    security.ghost-cyber-universe.com/policy: "required"
    security.ghost-cyber-universe.com/severity: "high"
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Namespace"]
    namespaces: ["ghost-cyber-universe", "ghost-cyber-universe-staging", "ghost-cyber-universe-production"]
  parameters:
    message: "All namespaces must have NetworkPolicies for network isolation"
    severity: "error"
---
# Contrainte pour les secrets
apiVersion: security.ghost-cyber-universe.com/v1beta1
kind: K8sRequiredSecrets
metadata:
  name: require-secure-secrets
  namespace: ghost-cyber-universe
  labels:
    security.ghost-cyber-universe.com/policy: "required"
    security.ghost-cyber-universe.com/severity: "high"
spec:
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Secret"]
    namespaces: ["ghost-cyber-universe", "ghost-cyber-universe-staging", "ghost-cyber-universe-production"]
  parameters:
    message: "All secrets must be properly encrypted and configured"
    severity: "error"
---
# Contrainte pour les PodSecurityStandards
apiVersion: security.ghost-cyber-universe.com/v1beta1
kind: K8sRequiredPodSecurityStandards
metadata:
  name: require-pod-security-standards
  namespace: ghost-cyber-universe
  labels:
    security.ghost-cyber-universe.com/policy: "required"
    security.ghost-cyber-universe.com/severity: "high"
spec:
  match:
    kinds:
      - apiGroups: ["apps"]
        kinds: ["Deployment", "DaemonSet", "StatefulSet"]
    namespaces: ["ghost-cyber-universe", "ghost-cyber-universe-staging", "ghost-cyber-universe-production"]
  parameters:
    message: "All pods must comply with PodSecurityStandards"
    severity: "error"
    requiredStandards:
      - "restricted"
---
# Contrainte pour les annotations de sécurité
apiVersion: security.ghost-cyber-universe.com/v1beta1
kind: K8sRequiredSecurityAnnotations
metadata:
  name: require-security-annotations
  namespace: ghost-cyber-universe
  labels:
    security.ghost-cyber-universe.com/policy: "required"
    security.ghost-cyber-universe.com/severity: "medium"
spec:
  match:
    kinds:
      - apiGroups: ["apps"]
        kinds: ["Deployment", "DaemonSet", "StatefulSet"]
    namespaces: ["ghost-cyber-universe", "ghost-cyber-universe-staging", "ghost-cyber-universe-production"]
  parameters:
    message: "All deployments must have security annotations"
    severity: "warning"
    requiredAnnotations:
      - "security.ghost-cyber-universe.com/scan-result"
      - "security.ghost-cyber-universe.com/signature"
---
# Contrainte pour les labels de sécurité
apiVersion: security.ghost-cyber-universe.com/v1beta1
kind: K8sRequiredSecurityLabels
metadata:
  name: require-security-labels
  namespace: ghost-cyber-universe
  labels:
    security.ghost-cyber-universe.com/policy: "required"
    security.ghost-cyber-universe.com/severity: "medium"
spec:
  match:
    kinds:
      - apiGroups: ["apps"]
        kinds: ["Deployment", "DaemonSet", "StatefulSet"]
    namespaces: ["ghost-cyber-universe", "ghost-cyber-universe-staging", "ghost-cyber-universe-production"]
  parameters:
    message: "All deployments must have security labels"
    severity: "warning"
    requiredLabels:
      - "security-level"
      - "compliance"
      - "monitoring"
---
# Contrainte pour les tolérances de sécurité
apiVersion: security.ghost-cyber-universe.com/v1beta1
kind: K8sRequiredSecurityTolerations
metadata:
  name: require-security-tolerations
  namespace: ghost-cyber-universe
  labels:
    security.ghost-cyber-universe.com/policy: "required"
    security.ghost-cyber-universe.com/severity: "high"
spec:
  match:
    kinds:
      - apiGroups: ["apps"]
        kinds: ["Deployment", "DaemonSet", "StatefulSet"]
    namespaces: ["ghost-cyber-universe", "ghost-cyber-universe-staging", "ghost-cyber-universe-production"]
  parameters:
    message: "All deployments must have security tolerations"
    severity: "error"
    requiredTolerations:
      - key: "security.ghost-cyber-universe.com/scan"
        operator: "Equal"
        value: "passed"
        effect: "NoSchedule"
      - key: "security.ghost-cyber-universe.com/encryption"
        operator: "Equal"
        value: "enabled"
        effect: "NoSchedule"
