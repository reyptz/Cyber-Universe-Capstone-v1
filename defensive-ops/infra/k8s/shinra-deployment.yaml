apiVersion: v1
kind: Namespace
metadata:
  name: defensive-ops
  labels:
    name: defensive-ops
    project: ghost-cyber-universe

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: shinra-config
  namespace: defensive-ops
data:
  MONGODB_URL: "mongodb://mongodb-service:27017"
  REDIS_URL: "redis://redis-service:6379"
  KAFKA_BOOTSTRAP_SERVERS: "kafka-service:9092"
  LOG_LEVEL: "INFO"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shinra-api
  namespace: defensive-ops
  labels:
    app: shinra-api
    component: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: shinra-api
  template:
    metadata:
      labels:
        app: shinra-api
        component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: shinra-api
        image: shinra-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: shinra-config
              key: MONGODB_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: shinra-config
              key: REDIS_URL
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: shinra-config
              key: KAFKA_BOOTSTRAP_SERVERS
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - shinra-api
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: shinra-api-service
  namespace: defensive-ops
  labels:
    app: shinra-api
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: shinra-api

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: shinra-api-hpa
  namespace: defensive-ops
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: shinra-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: shinra-api-ingress
  namespace: defensive-ops
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
spec:
  tls:
  - hosts:
    - api.defensive-ops.local
    secretName: shinra-api-tls
  rules:
  - host: api.defensive-ops.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: shinra-api-service
            port:
              number: 8000
