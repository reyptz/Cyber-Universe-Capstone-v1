const fs = require('fs');
const path = require('path');

async function runDemo() {
    console.log('üéØ D√©monstration ZK-SNARK - Laboratoire CyberSec\n');
    
    // V√©rifier si le setup a √©t√© fait
    const buildDir = path.join(__dirname, 'build');
    const zkeyPath = path.join(buildDir, 'password_verification_final.zkey');
    
    if (!fs.existsSync(zkeyPath)) {
        console.log('‚ö†Ô∏è  Setup requis. Ex√©cution automatique...\n');
        
        try {
            const { setup } = require('./scripts/setup.js');
            await setup();
            console.log('\n');
        } catch (error) {
            console.error('‚ùå Erreur lors du setup:', error.message);
            console.log('\nüí° Essayez manuellement: npm run setup');
            return;
        }
    }
    
    // Ex√©cuter la d√©monstration de preuve
    try {
        const { generateAndVerifyProof } = require('./scripts/prove.js');
        await generateAndVerifyProof();
        
        console.log('\nüéâ D√©monstration termin√©e avec succ√®s!');
        console.log('\nüìã Fichiers g√©n√©r√©s:');
        console.log('   - proof.json (preuve ZK-SNARK)');
        console.log('   - public.json (signaux publics)');
        console.log('   - build/ (circuit compil√© et cl√©s)');
        
    } catch (error) {
        console.error('‚ùå Erreur lors de la d√©monstration:', error.message);
    }
}

// Ex√©cuter la d√©monstration si ce script est appel√© directement
if (require.main === module) {
    runDemo().catch(console.error);
}

module.exports = { runDemo };